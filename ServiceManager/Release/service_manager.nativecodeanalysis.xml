<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Projects\com-service\src\Service\ServiceManager\</FILEPATH>
      <FILENAME>service_manager.cpp</FILENAME>
      <LINE>154</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>28159</DEFECTCODE>
    <DESCRIPTION>Consider using 'GetTickCount64' instead of 'GetTickCount'. Reason: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION>
    <FUNCTION>ServiceManager::startService</FUNCTION>
    <DECORATED>?startService@ServiceManager@@UAGJPA_W@Z</DECORATED>
    <FUNCLINE>85</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Projects\com-service\src\Service\ServiceManager\</FILEPATH>
      <FILENAME>service_manager.cpp</FILENAME>
      <LINE>195</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>28159</DEFECTCODE>
    <DESCRIPTION>Consider using 'GetTickCount64' instead of 'GetTickCount'. Reason: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION>
    <FUNCTION>ServiceManager::startService</FUNCTION>
    <DECORATED>?startService@ServiceManager@@UAGJPA_W@Z</DECORATED>
    <FUNCLINE>85</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Projects\com-service\src\Service\ServiceManager\</FILEPATH>
      <FILENAME>service_manager.cpp</FILENAME>
      <LINE>200</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>28159</DEFECTCODE>
    <DESCRIPTION>Consider using 'GetTickCount64' instead of 'GetTickCount'. Reason: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION>
    <FUNCTION>ServiceManager::startService</FUNCTION>
    <DECORATED>?startService@ServiceManager@@UAGJPA_W@Z</DECORATED>
    <FUNCLINE>85</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Projects\com-service\src\Service\ServiceManager\</FILEPATH>
      <FILENAME>service_manager.cpp</FILENAME>
      <LINE>248</LINE>
      <COLUMN>32</COLUMN>
    </SFA>
    <DEFECTCODE>28159</DEFECTCODE>
    <DESCRIPTION>Consider using 'GetTickCount64' instead of 'GetTickCount'. Reason: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION>
    <FUNCTION>ServiceManager::startService</FUNCTION>
    <DECORATED>?startService@ServiceManager@@UAGJPA_W@Z</DECORATED>
    <FUNCLINE>85</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Projects\com-service\src\Service\ServiceManager\</FILEPATH>
      <FILENAME>service_manager.cpp</FILENAME>
      <LINE>283</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>28159</DEFECTCODE>
    <DESCRIPTION>Consider using 'GetTickCount64' instead of 'GetTickCount'. Reason: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION>
    <FUNCTION>ServiceManager::startService</FUNCTION>
    <DECORATED>?startService@ServiceManager@@UAGJPA_W@Z</DECORATED>
    <FUNCLINE>85</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Projects\com-service\src\Service\ServiceManager\</FILEPATH>
      <FILENAME>service_manager.cpp</FILENAME>
      <LINE>288</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>28159</DEFECTCODE>
    <DESCRIPTION>Consider using 'GetTickCount64' instead of 'GetTickCount'. Reason: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION>
    <FUNCTION>ServiceManager::startService</FUNCTION>
    <DECORATED>?startService@ServiceManager@@UAGJPA_W@Z</DECORATED>
    <FUNCLINE>85</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Projects\com-service\src\Service\ServiceManager\</FILEPATH>
      <FILENAME>service_manager.cpp</FILENAME>
      <LINE>328</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>28159</DEFECTCODE>
    <DESCRIPTION>Consider using 'GetTickCount64' instead of 'GetTickCount'. Reason: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION>
    <FUNCTION>ServiceManager::stopService</FUNCTION>
    <DECORATED>?stopService@ServiceManager@@UAGJPA_W@Z</DECORATED>
    <FUNCLINE>324</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Projects\com-service\src\Service\ServiceManager\</FILEPATH>
      <FILENAME>service_manager.cpp</FILENAME>
      <LINE>439</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>28159</DEFECTCODE>
    <DESCRIPTION>Consider using 'GetTickCount64' instead of 'GetTickCount'. Reason: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION>
    <FUNCTION>ServiceManager::stopService</FUNCTION>
    <DECORATED>?stopService@ServiceManager@@UAGJPA_W@Z</DECORATED>
    <FUNCLINE>324</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Projects\com-service\src\Service\ServiceManager\</FILEPATH>
      <FILENAME>service_manager.cpp</FILENAME>
      <LINE>482</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>28159</DEFECTCODE>
    <DESCRIPTION>Consider using 'GetTickCount64' instead of 'GetTickCount'. Reason: GetTickCount overflows roughly every 49 days.  Code that does not take that into account can loop indefinitely.  GetTickCount64 operates on 64 bit values and does not have that problem</DESCRIPTION>
    <FUNCTION>ServiceManager::stopService</FUNCTION>
    <DECORATED>?stopService@ServiceManager@@UAGJPA_W@Z</DECORATED>
    <FUNCLINE>324</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Projects\com-service\src\Service\ServiceManager\</FILEPATH>
      <FILENAME>service_manager.cpp</FILENAME>
      <LINE>748</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '_Param_(4)&gt;=sizeof(_SERVICE_DESCRIPTIONW *)' is not true at this call.</DESCRIPTION>
    <FUNCTION>ServiceManager::queryServiceDescriptionSM</FUNCTION>
    <DECORATED>?queryServiceDescriptionSM@ServiceManager@@UAGJPA_WPAUSERVICE_DESCRIPTION_UDT@@@Z</DECORATED>
    <FUNCLINE>720</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Projects\com-service\src\Service\ServiceManager\</FILEPATH>
      <FILENAME>service_manager.cpp</FILENAME>
      <LINE>815</LINE>
      <COLUMN>81</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '_Param_(4)&gt;=sizeof(_SERVICE_FAILURE_ACTIONSW *)' is not true at this call.</DESCRIPTION>
    <FUNCTION>ServiceManager::queryServiceFailureActionsSM</FUNCTION>
    <DECORATED>?queryServiceFailureActionsSM@ServiceManager@@UAGJPA_WPAUSERVICE_FAILURE_ACTIONS_UDT@@@Z</DECORATED>
    <FUNCLINE>787</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\Projects\com-service\src\Service\ServiceManager\</FILEPATH>
      <FILENAME>service_manager.cpp</FILENAME>
      <LINE>988</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>Return value ignored: 'EnumServicesStatusA'.</DESCRIPTION>
    <FUNCTION>ServiceManager::getServices</FUNCTION>
    <DECORATED>?getServices@ServiceManager@@UAGJPAHPAPAUtagSAFEARRAY@@1@Z</DECORATED>
    <FUNCLINE>939</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>